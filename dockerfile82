FROM jack.hc-sc.gc.ca/php/php-base:8.2

LABEL title = 'Laminas framework with npm/gulp. Apps going in /apps/'
LABEL author = 'Web/Mobile Team (imsd.web-dsgi@hc-sc.gc.ca)'
LABEL source = 'https://github.hc-sc.gc.ca/hs/php-base-laminas'

# These environment variables are setup just to let the application know it is using Laminas
# The app would know it is in Laminas, the server signature uses this to return Laminas, Drupal or something else.
# The Apache Document Root is changed from /var/www/html to /public since... well I prefer /public.
ENV USING_FRAMEWORK=Laminas \
    USING_LAMINAS=1

# set some useful general params so execution runs as expected
# -u = Treats unset or undefined variables as an error when substituting
# -e = Instructs a shell to exit if a command fails, i.e., if it outputs a non-zero exit status.
# -x = Prints out command arguments during execution.
RUN set -uex;

# update the OS and make sur the required package are installed
RUN apt-get update -y; \
    apt-get install -y ca-certificates curl gnupg; \
    mkdir -p /etc/apt/keyrings;

# get the GPG public key for node
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key \
     | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg;

# install node and npm
COPY --from=node:18-slim /usr/local/bin /usr/local/bin
COPY --from=node:18-slim /usr/local/lib/node_modules /usr/local/lib/node_modules

# Set the working dir and copy all the code folder in the www folder
WORKDIR /var/www
COPY --chown=www-data code/ /var/www/

# Make a folder and clone the Void repo (developed by Francois Dupras)
RUN mkdir -p /var/www/vendor/Void && git clone https://github.com/duprasf/Void.git /var/www/vendor/Void/.

# Install Gulp and the Gulp modules for PostCSS
RUN npm install --global gulp-cli && npm install

# Install all the composer package including Zend Framework
RUN composer update

# Make a cache folder (used by OP Cache) and link /var/www/html to /public
RUN mkdir -p /var/www/data/cache \
    && chown www-data /var/www/data/cache \
    && rm -Rf html && ln -s public html

# ICM cert is the internal SSC certicate and set cronjob
COPY icm-root.crt /usr/local/share/ca-certificates/icm-root.crt
RUN cat /usr/local/share/ca-certificates/icm-root.crt >> /etc/ssl/certs/ca-certificates.crt

# Clean up
RUN rm -rf /var/lib/apt/lists/*

# Copy and make go-laminas the entry point of the container.
COPY --chmod=774 go-laminas.sh /go-laminas.sh
ENTRYPOINT ["/go-laminas.sh"]
